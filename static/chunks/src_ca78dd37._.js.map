{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport {\n  detectDrugInteractions,\n  type DetectDrugInteractionsOutput,\n} from '@/ai/flows/detect-drug-interactions';\nimport {\n  parsePrescription,\n  type ParsePrescriptionOutput,\n} from '@/ai/flows/parse-prescription-flow';\nimport {\n  medicationChat,\n  type MedicationChatOutput,\n} from '@/ai/flows/chatbot-flow';\nimport {\n  explainInteractionRisks,\n  type ExplainInteractionRisksOutput,\n} from '@/ai/flows/explain-interaction-risks';\nimport {\n  identifyPill,\n  type IdentifyPillOutput,\n} from '@/ai/flows/identify-pill-flow';\nimport {\n    findGenericAlternatives,\n    type FindGenericAlternativesOutput\n} from '@/ai/flows/find-generic-alternatives';\nimport {\n    transcribeMedicationAudio,\n    type TranscribeMedicationAudioOutput\n} from '@/ai/flows/voice-to-text';\n\n\nexport async function checkInteractions(\n  drugList: string[]\n): Promise<DetectDrugInteractionsOutput | { error: string }> {\n  if (!drugList || drugList.length < 2) {\n    return { error: 'Please provide at least two drugs to check for interactions.' };\n  }\n\n  try {\n    const result = await detectDrugInteractions({ drugList });\n    return result;\n  } catch (error) {\n    console.error('Error in detectDrugInteractions flow:', error);\n    return { error: 'Failed to check interactions due to a server error. Please try again later.' };\n  }\n}\n\nexport async function getDrugsFromPrescription(\n  photoDataUri: string\n): Promise<ParsePrescriptionOutput | { error: string }> {\n  if (!photoDataUri) {\n    return { error: 'Please provide a prescription image.' };\n  }\n\n  try {\n    const result = await parsePrescription({ photoDataUri });\n    return result;\n  } catch (error) {\n    console.error('Error in parsePrescription flow:', error);\n    return {\n      error:\n        'Failed to parse prescription due to a server error. Please try again later.',\n    };\n  }\n}\n\nexport async function askChatbot(\n  question: string,\n  drugList?: string[],\n  attachmentDataUri?: string\n): Promise<MedicationChatOutput | { error: string }> {\n  if (!question) {\n    return { error: 'Please provide a question.' };\n  }\n\n  try {\n    const result = await medicationChat({ question, drugList, attachmentDataUri });\n    return result;\n  } catch (error) {\n    console.error('Error in medicationChat flow:', error);\n    return { error: 'Failed to get a response due to a server error. Please try again later.' };\n  }\n}\n\nexport async function getRiskExplanation(\n  drugA: string,\n  drugB: string,\n  interactionDetails: string\n): Promise<ExplainInteractionRisksOutput | { error: string }> {\n  if (!drugA || !drugB || !interactionDetails) {\n    return { error: 'Please provide the necessary details for an explanation.' };\n  }\n\n  try {\n    const result = await explainInteractionRisks({ drugA, drugB, interactionDetails });\n    return result;\n  } catch (error) {\n    console.error('Error in explainInteractionRisks flow:', error);\n    return { error: 'Failed to get an explanation due to a server error. Please try again later.' };\n  }\n}\n\nexport async function getPillIdentification(\n  photoDataUri: string,\n  imprint?: string,\n  color?: string,\n  shape?: string\n): Promise<IdentifyPillOutput | { error: string }> {\n  if (!photoDataUri) {\n    return { error: 'Please provide a photo of the pill.' };\n  }\n  \n  try {\n    const result = await identifyPill({ photoDataUri, imprint, color, shape });\n    return result;\n  } catch (error) {\n    console.error('Error in identifyPill flow:', error);\n    return { error: 'Failed to identify pill due to a server error. Please try again later.' };\n  }\n}\n\nexport async function getGenericAlternatives(\n    drugName: string\n): Promise<FindGenericAlternativesOutput | { error: string }> {\n    if (!drugName) {\n        return { error: 'Please provide a drug name.' };\n    }\n\n    try {\n        const result = await findGenericAlternatives({ drugName });\n        return result;\n    } catch (error) {\n        console.error('Error in findGenericAlternatives flow:', error);\n        return { error: 'Failed to find alternatives due to a server error. Please try again later.' };\n    }\n}\n\nexport async function getTranscription(\n    audioDataUri: string\n): Promise<TranscribeMedicationAudioOutput | { error: string }> {\n    if (!audioDataUri) {\n        return { error: 'Please provide an audio file.' };\n    }\n\n    try {\n        const result = await transcribeMedicationAudio({ audioDataUri });\n        return result;\n    } catch (error) {\n        console.error('Error in transcribeMedicationAudio flow:', error);\n        return { error: 'Failed to transcribe audio due to a server error. Please try again later.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;IAoEsB,aAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;;AAGb,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,qKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/chatbot.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { askChatbot } from '@/app/actions';\nimport Image from 'next/image';\n\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormMessage } from '@/components/ui/form';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Bot, Loader2, Send, User, Paperclip, X } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { useToast } from '@/hooks/use-toast';\n\nconst formSchema = z.object({\n  message: z.string().min(1, 'Message cannot be empty.'),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\ninterface Message {\n  role: 'user' | 'assistant';\n  content: string;\n  attachmentPreview?: string;\n}\n\nexport function Chatbot() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [drugList, setDrugList] = useState<string[]>([]);\n  const [attachment, setAttachment] = useState<{ file: File; preview: string } | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const savedMeds = localStorage.getItem('medications');\n    if (savedMeds) {\n      try {\n        const parsedMeds: { name: string }[] = JSON.parse(savedMeds);\n        setDrugList(parsedMeds.map(med => med.name));\n      } catch (e) {\n        console.error(\"Failed to parse medications from localStorage\", e);\n      }\n    }\n  }, []);\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      message: '',\n    },\n  });\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      if (file.size > 4 * 1024 * 1024) { // 4MB limit\n        toast({\n          variant: 'destructive',\n          title: 'File too large',\n          description: 'Please upload a file smaller than 4MB.',\n        });\n        return;\n      }\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setAttachment({ file, preview: reader.result as string });\n      };\n      reader.readAsDataURL(file);\n    }\n    // Reset the input value to allow re-selecting the same file\n    if(event.target) {\n        event.target.value = '';\n    }\n  };\n\n  const onSubmit = async (data: FormValues) => {\n    setIsLoading(true);\n    const userMessage: Message = { \n      role: 'user', \n      content: data.message,\n      attachmentPreview: attachment?.preview,\n    };\n    setMessages((prev) => [...prev, userMessage]);\n    form.reset();\n\n    const response = await askChatbot(data.message, drugList, attachment?.preview);\n    setAttachment(null); // Clear attachment after sending\n\n    if (response && 'error' in response) {\n      const errorMessage: Message = { role: 'assistant', content: response.error };\n      setMessages((prev) => [...prev, errorMessage]);\n    } else if (response.answer) {\n      const assistantMessage: Message = { role: 'assistant', content: response.answer };\n      setMessages((prev) => [...prev, assistantMessage]);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Card className=\"flex h-[calc(100vh-8rem)] flex-col\">\n       <CardHeader>\n        <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n          <Bot /> AI Assistant\n        </CardTitle>\n        <CardDescription>\n          Ask questions about medications, or upload an image for analysis. This is not a substitute for professional medical advice.\n           {drugList.length > 0 && (\n            <p className=\"text-xs mt-2 text-green-600\">\n              Context loaded for your {drugList.length} medication(s).\n            </p>\n          )}\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex-1 flex flex-col gap-4 overflow-hidden\">\n        <ScrollArea className=\"flex-1 pr-4 -mr-4\">\n            <div className=\"space-y-4\">\n            {messages.map((message, index) => (\n              <div\n                key={index}\n                className={cn(\n                  'flex items-start gap-4',\n                  message.role === 'user' ? 'justify-end' : ''\n                )}\n              >\n                {message.role === 'assistant' && (\n                  <Avatar className=\"h-8 w-8\">\n                     <AvatarFallback><Bot className=\"h-4 w-4\" /></AvatarFallback>\n                  </Avatar>\n                )}\n                <div\n                  className={cn(\n                    'max-w-md rounded-lg p-3 text-sm',\n                    message.role === 'user'\n                      ? 'bg-primary text-primary-foreground'\n                      : 'bg-muted'\n                  )}\n                >\n                  {message.attachmentPreview && (\n                    <div className=\"relative mb-2 h-48 w-48\">\n                      <Image\n                        src={message.attachmentPreview}\n                        alt=\"User attachment\"\n                        fill\n                        className=\"rounded-md object-contain\"\n                      />\n                    </div>\n                  )}\n                  <p className=\"whitespace-pre-wrap\">{message.content}</p>\n                </div>\n                 {message.role === 'user' && (\n                  <Avatar className=\"h-8 w-8\">\n                    <AvatarFallback><User className=\"h-4 w-4\" /></AvatarFallback>\n                  </Avatar>\n                )}\n              </div>\n            ))}\n             {isLoading && (\n              <div className=\"flex items-start gap-4\">\n                 <Avatar className=\"h-8 w-8\">\n                     <AvatarFallback><Bot className=\"h-4 w-4\" /></AvatarFallback>\n                  </Avatar>\n                <div className=\"max-w-md rounded-lg p-3 text-sm bg-muted flex items-center gap-2\">\n                    <Loader2 className=\"h-4 w-4 animate-spin\"/>\n                    <span>Thinking...</span>\n                </div>\n              </div>\n            )}\n            </div>\n        </ScrollArea>\n        <div className=\"mt-auto pt-4\">\n          {attachment && (\n            <div className=\"mb-2 relative w-24 h-24 border rounded-md p-1 bg-muted\">\n                <Image\n                    src={attachment.preview}\n                    alt=\"File preview\"\n                    fill\n                    className=\"object-contain rounded-md\"\n                />\n                <Button\n                    variant=\"destructive\"\n                    size=\"icon\"\n                    className=\"absolute -top-2 -right-2 h-6 w-6 rounded-full\"\n                    onClick={() => setAttachment(null)}\n                    disabled={isLoading}\n                >\n                    <X className=\"h-4 w-4\" />\n                </Button>\n            </div>\n          )}\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"flex items-center gap-2\">\n              <FormField\n                control={form.control}\n                name=\"message\"\n                render={({ field }) => (\n                  <FormItem className=\"flex-1\">\n                    <FormControl>\n                      <Input placeholder=\"e.g., Can I take Ibuprofen with Aspirin?\" {...field} disabled={isLoading} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <Input ref={fileInputRef} type=\"file\" className=\"hidden\" onChange={handleFileChange} accept=\"image/*,.pdf,.doc,.docx\" />\n              <Button type=\"button\" variant=\"ghost\" size=\"icon\" onClick={() => fileInputRef.current?.click()} disabled={isLoading}>\n                <Paperclip className=\"h-4 w-4\" />\n                <span className=\"sr-only\">Attach file</span>\n              </Button>\n              <Button type=\"submit\" disabled={isLoading} size=\"icon\">\n                <Send className=\"h-4 w-4\" />\n                <span className=\"sr-only\">Send</span>\n              </Button>\n            </form>\n          </Form>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1055, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/chatbot/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { Chatbot } from '@/components/chatbot';\n\nexport default function ChatbotPage() {\n  return (\n    <main className=\"flex-1 p-4 md:p-8\">\n      <Chatbot />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAFA;;;AAIe,SAAS;IACtB,qBACE,6LAAC;QAAK,WAAU;kBACd,cAAA,6LAAC,gIAAA,CAAA,UAAO;;;;;;;;;;AAGd;KANwB","debugId":null}}]
}