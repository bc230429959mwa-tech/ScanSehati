{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/accordion.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,YAAY,wKAAA,CAAA,OAAuB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG;AAE5B,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,SAAyB;QAAC,WAAU;kBACnC,cAAA,6LAAC,wKAAA,CAAA,UAA0B;YACzB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gIACA;YAED,GAAG,KAAK;;gBAER;8BACD,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW;AAErE,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,UAA0B;QACzB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;kBAET,cAAA,6LAAC;YAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;sBAAa;;;;;;;;;;;;AAIjD,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        warning:\n          \"border-transparent bg-accent text-accent-foreground hover:bg-accent/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport {\n  detectDrugInteractions,\n  type DetectDrugInteractionsOutput,\n} from '@/ai/flows/detect-drug-interactions';\nimport {\n  parsePrescription,\n  type ParsePrescriptionOutput,\n} from '@/ai/flows/parse-prescription-flow';\nimport {\n  medicationChat,\n  type MedicationChatOutput,\n} from '@/ai/flows/chatbot-flow';\n\nexport async function checkInteractions(\n  drugList: string[]\n): Promise<DetectDrugInteractionsOutput | { error: string }> {\n  if (!drugList || drugList.length < 2) {\n    return { error: 'Please provide at least two drugs to check for interactions.' };\n  }\n\n  try {\n    const result = await detectDrugInteractions({ drugList });\n    return result;\n  } catch (error) {\n    console.error('Error in detectDrugInteractions flow:', error);\n    return { error: 'Failed to check interactions due to a server error. Please try again later.' };\n  }\n}\n\nexport async function getDrugsFromPrescription(\n  photoDataUri: string\n): Promise<ParsePrescriptionOutput | { error: string }> {\n  if (!photoDataUri) {\n    return { error: 'Please provide a prescription image.' };\n  }\n\n  try {\n    const result = await parsePrescription({ photoDataUri });\n    return result;\n  } catch (error) {\n    console.error('Error in parsePrescription flow:', error);\n    return {\n      error:\n        'Failed to parse prescription due to a server error. Please try again later.',\n    };\n  }\n}\n\nexport async function askChatbot(\n  question: string,\n  medications?: string[]\n): Promise<MedicationChatOutput | { error: string }> {\n  if (!question) {\n    return { error: 'Please provide a question.' };\n  }\n\n  try {\n    const result = await medicationChat({ question, medications });\n    return result;\n  } catch (error) {\n    console.error('Error in medicationChat flow:', error);\n    return { error: 'Failed to get a response due to a server error. Please try again later.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAgBsB,oBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport {\n  detectDrugInteractions,\n  type DetectDrugInteractionsOutput,\n} from '@/ai/flows/detect-drug-interactions';\nimport {\n  parsePrescription,\n  type ParsePrescriptionOutput,\n} from '@/ai/flows/parse-prescription-flow';\nimport {\n  medicationChat,\n  type MedicationChatOutput,\n} from '@/ai/flows/chatbot-flow';\n\nexport async function checkInteractions(\n  drugList: string[]\n): Promise<DetectDrugInteractionsOutput | { error: string }> {\n  if (!drugList || drugList.length < 2) {\n    return { error: 'Please provide at least two drugs to check for interactions.' };\n  }\n\n  try {\n    const result = await detectDrugInteractions({ drugList });\n    return result;\n  } catch (error) {\n    console.error('Error in detectDrugInteractions flow:', error);\n    return { error: 'Failed to check interactions due to a server error. Please try again later.' };\n  }\n}\n\nexport async function getDrugsFromPrescription(\n  photoDataUri: string\n): Promise<ParsePrescriptionOutput | { error: string }> {\n  if (!photoDataUri) {\n    return { error: 'Please provide a prescription image.' };\n  }\n\n  try {\n    const result = await parsePrescription({ photoDataUri });\n    return result;\n  } catch (error) {\n    console.error('Error in parsePrescription flow:', error);\n    return {\n      error:\n        'Failed to parse prescription due to a server error. Please try again later.',\n    };\n  }\n}\n\nexport async function askChatbot(\n  question: string,\n  medications?: string[]\n): Promise<MedicationChatOutput | { error: string }> {\n  if (!question) {\n    return { error: 'Please provide a question.' };\n  }\n\n  try {\n    const result = await medicationChat({ question, medications });\n    return result;\n  } catch (error) {\n    console.error('Error in medicationChat flow:', error);\n    return { error: 'Failed to get a response due to a server error. Please try again later.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAmDsB,aAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 541, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/chatbot.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { askChatbot } from '@/app/actions';\n\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormMessage } from '@/components/ui/form';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar';\nimport { Bot, Loader2, Send, User } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\nconst formSchema = z.object({\n  message: z.string().min(1, 'Message cannot be empty.'),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\ninterface Message {\n  role: 'user' | 'assistant';\n  content: string;\n}\n\ninterface ChatbotProps {\n  medications: { name: string }[];\n}\n\nexport function Chatbot({ medications }: ChatbotProps) {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      message: '',\n    },\n  });\n\n  const onSubmit = async (data: FormValues) => {\n    setIsLoading(true);\n    const userMessage: Message = { role: 'user', content: data.message };\n    setMessages((prev) => [...prev, userMessage]);\n    form.reset();\n\n    const drugNames = medications.map((m) => m.name);\n    const response = await askChatbot(data.message, drugNames);\n\n    if (response && 'error' in response) {\n      const errorMessage: Message = { role: 'assistant', content: response.error };\n      setMessages((prev) => [...prev, errorMessage]);\n    } else if (response.answer) {\n      const assistantMessage: Message = { role: 'assistant', content: response.answer };\n      setMessages((prev) => [...prev, assistantMessage]);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Card className=\"flex h-[calc(100vh-8rem)] flex-col lg:h-auto\">\n       <CardHeader>\n        <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n          <Bot /> AI Assistant\n        </CardTitle>\n        <CardDescription>\n          Ask questions about your medications. This is not a substitute for professional medical advice.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex-1 flex flex-col gap-4 overflow-hidden\">\n        <ScrollArea className=\"flex-1 pr-4 -mr-4 h-64 lg:h-auto\">\n            <div className=\"space-y-4\">\n            {messages.map((message, index) => (\n              <div\n                key={index}\n                className={cn(\n                  'flex items-start gap-4',\n                  message.role === 'user' ? 'justify-end' : ''\n                )}\n              >\n                {message.role === 'assistant' && (\n                  <Avatar className=\"h-8 w-8\">\n                     <AvatarFallback><Bot className=\"h-4 w-4\" /></AvatarFallback>\n                  </Avatar>\n                )}\n                <div\n                  className={cn(\n                    'max-w-md rounded-lg p-3 text-sm',\n                    message.role === 'user'\n                      ? 'bg-primary text-primary-foreground'\n                      : 'bg-muted'\n                  )}\n                >\n                  {message.content}\n                </div>\n                 {message.role === 'user' && (\n                  <Avatar className=\"h-8 w-8\">\n                    <AvatarFallback><User className=\"h-4 w-4\" /></AvatarFallback>\n                  </Avatar>\n                )}\n              </div>\n            ))}\n             {isLoading && (\n              <div className=\"flex items-start gap-4\">\n                 <Avatar className=\"h-8 w-8\">\n                     <AvatarFallback><Bot className=\"h-4 w-4\" /></AvatarFallback>\n                  </Avatar>\n                <div className=\"max-w-md rounded-lg p-3 text-sm bg-muted flex items-center gap-2\">\n                    <Loader2 className=\"h-4 w-4 animate-spin\"/>\n                    <span>Thinking...</span>\n                </div>\n              </div>\n            )}\n            </div>\n        </ScrollArea>\n        <div className=\"mt-auto pt-4\">\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"flex items-center gap-2\">\n              <FormField\n                control={form.control}\n                name=\"message\"\n                render={({ field }) => (\n                  <FormItem className=\"flex-1\">\n                    <FormControl>\n                      <Input placeholder=\"e.g., Why is Lisinopril risky?\" {...field} disabled={isLoading} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <Button type=\"submit\" disabled={isLoading} size=\"icon\">\n                <Send className=\"h-4 w-4\" />\n                <span className=\"sr-only\">Send</span>\n              </Button>\n            </form>\n          </Form>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 979, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/patient-dashboard.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/hooks/use-toast';\nimport { AlertCircle, PlusCircle, User, Stethoscope, Pill, Hash, Loader2, Trash2 } from 'lucide-react';\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';\nimport { Badge } from '@/components/ui/badge';\nimport { checkInteractions } from '@/app/actions';\nimport { type DetectDrugInteractionsOutput } from '@/ai/flows/detect-drug-interactions';\nimport { Chatbot } from './chatbot';\n\ninterface Medication {\n  id: number;\n  name: string;\n  rxNumber: string;\n  doctor: string;\n  pills: number;\n  dosage: string;\n  frequency: string;\n  form: string;\n}\n\nconst initialMedications: Medication[] = [\n  { id: 1, name: 'Lisinopril', rxNumber: 'RX789123', doctor: 'Dr. Smith', pills: 30, dosage: '10mg', frequency: 'Once daily', form: 'Tablet' },\n  { id: 2, name: 'Metformin', rxNumber: 'RX456789', doctor: 'Dr. Smith', pills: 60, dosage: '500mg', frequency: 'Twice daily', form: 'Tablet' },\n  { id: 3, name: 'Simvastatin', rxNumber: 'RX123456', doctor: 'Dr. Jones', pills: 30, dosage: '20mg', frequency: 'Once daily', form: 'Tablet' },\n];\n\nexport function PatientDashboard() {\n  const [patientName, setPatientName] = useState('Jane Doe');\n  const [membershipNumber, setMembershipNumber] = useState('MEM123456789');\n  const [medications, setMedications] = useState<Medication[]>(initialMedications);\n  const [newDrugName, setNewDrugName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [interactions, setInteractions] = useState<DetectDrugInteractionsOutput['interactions']>([]);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    if (medications.length > 1) {\n      runInteractionCheck(medications.map(m => m.name));\n    }\n  }, []);\n\n  const runInteractionCheck = async (drugList: string[]) => {\n    if (drugList.length < 2) return;\n    setIsLoading(true);\n    const response = await checkInteractions(drugList);\n    if (response && 'error' in response) {\n      toast({ variant: 'destructive', title: 'Error', description: response.error });\n      setInteractions([]);\n    } else {\n      setInteractions(response.interactions || []);\n      if (response.interactions && response.interactions.length > 0) {\n        toast({ title: 'Interaction Alert', description: 'A potential drug interaction was detected. Please review your medications.' });\n      }\n    }\n    setIsLoading(false);\n  };\n  \n  const handleAddDrug = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newDrugName) {\n      toast({ variant: 'destructive', title: 'Error', description: 'Please enter a drug name.' });\n      return;\n    }\n    const newMed: Medication = {\n      id: Date.now(),\n      name: newDrugName,\n      rxNumber: `RX${Date.now().toString().slice(-6)}`,\n      doctor: 'Dr. Self-Prescribed',\n      pills: 0,\n      dosage: 'N/A',\n      frequency: 'N/A',\n      form: 'Unknown'\n    };\n    \n    const updatedMeds = [...medications, newMed];\n    setMedications(updatedMeds);\n    setNewDrugName('');\n    \n    await runInteractionCheck(updatedMeds.map(m => m.name));\n  };\n\n  const removeDrug = (id: number) => {\n    const updatedMeds = medications.filter(med => med.id !== id);\n    setMedications(updatedMeds);\n    runInteractionCheck(updatedMeds.map(m => m.name));\n  };\n\n\n  const getInteractionStatus = (drugName: string) => {\n    return interactions.some(int => int.drugA.toLowerCase() === drugName.toLowerCase() || int.drugB.toLowerCase() === drugName.toLowerCase());\n  };\n\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 items-start\">\n      <div className=\"lg:col-span-1 space-y-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\"><User /> Patient Information</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2\">\n                <Label htmlFor=\"patientName\">Patient Name</Label>\n                <Input \n                    id=\"patientName\" \n                    value={patientName} \n                    onChange={(e) => setPatientName(e.target.value)}\n                    placeholder=\"Enter patient name\"\n                />\n            </div>\n            <div className=\"space-y-2\">\n                <Label htmlFor=\"membershipNumber\">Membership No.</Label>\n                <Input \n                    id=\"membershipNumber\" \n                    value={membershipNumber}\n                    onChange={(e) => setMembershipNumber(e.target.value)}\n                    placeholder=\"Enter membership number\"\n                />\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader>\n            <CardTitle>Add New Medication</CardTitle>\n            <CardDescription>Add a new drug to check for interactions against your current list.</CardDescription>\n          </CardHeader>\n          <form onSubmit={handleAddDrug}>\n            <CardContent>\n              <Input\n                placeholder=\"e.g., Aspirin\"\n                value={newDrugName}\n                onChange={(e) => setNewDrugName(e.target.value)}\n                disabled={isLoading}\n              />\n            </CardContent>\n            <CardFooter>\n              <Button type=\"submit\" disabled={isLoading} className=\"w-full\">\n                {isLoading ? <Loader2 className=\"animate-spin mr-2\" /> : <PlusCircle className=\"mr-2\" />}\n                Add and Check\n              </Button>\n            </CardFooter>\n          </form>\n        </Card>\n        <Chatbot medications={medications} />\n      </div>\n\n      <div className=\"lg:col-span-2\">\n        <Card>\n          <CardHeader>\n            <CardTitle>My Medications</CardTitle>\n            <CardDescription>\n              A list of your current medications. Interaction alerts will appear here.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {medications.map((med) => (\n               <Card key={med.id} className=\"p-4\">\n                 <div className=\"flex justify-between items-start\">\n                    <div>\n                      <h3 className=\"font-bold text-lg flex items-center gap-2\">\n                        <Pill size={20} /> {med.name}\n                        {getInteractionStatus(med.name) && (\n                            <Badge variant=\"destructive\" className=\"flex items-center gap-1\">\n                                <AlertCircle size={14} /> Interaction\n                            </Badge>\n                        )}\n                      </h3>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {med.dosage} - {med.frequency} - {med.form}\n                      </p>\n                    </div>\n                    <Button variant=\"ghost\" size=\"icon\" onClick={() => removeDrug(med.id)} className=\"text-muted-foreground hover:text-destructive\">\n                        <Trash2 size={16} />\n                    </Button>\n                 </div>\n                <Accordion type=\"single\" collapsible className=\"w-full\">\n                    <AccordionItem value=\"item-1\" className=\"border-b-0\">\n                        <AccordionTrigger className=\"text-sm pt-2 pb-0\">View Details</AccordionTrigger>\n                        <AccordionContent className=\"text-muted-foreground space-y-1 pt-2 text-sm\">\n                           <p className=\"flex items-center gap-2\"><Hash size={14}/> <strong>RX Number:</strong> {med.rxNumber}</p>\n                           <p className=\"flex items-center gap-2\"><Stethoscope size={14} /> <strong>Prescribed by:</strong> {med.doctor}</p>\n                           <p className=\"flex items-center gap-2\"><Pill size={14} /> <strong>Pill Count:</strong> {med.pills}</p>\n                        </AccordionContent>\n                    </AccordionItem>\n                </Accordion>\n              </Card>\n            ))}\n            {medications.length === 0 && (\n                <div className=\"text-center py-8 text-muted-foreground\">\n                    You have no medications saved.\n                </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}