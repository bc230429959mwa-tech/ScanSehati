{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport {\n  detectDrugInteractions,\n  type DetectDrugInteractionsOutput,\n} from '@/ai/flows/detect-drug-interactions';\nimport {\n  parsePrescription,\n  type ParsePrescriptionOutput,\n} from '@/ai/flows/parse-prescription-flow';\nimport {\n  medicationChat,\n  type MedicationChatOutput,\n} from '@/ai/flows/chatbot-flow';\nimport {\n  explainInteractionRisks,\n  type ExplainInteractionRisksOutput,\n} from '@/ai/flows/explain-interaction-risks';\nimport {\n  identifyPill,\n  type IdentifyPillOutput,\n} from '@/ai/flows/identify-pill-flow';\nimport {\n    findGenericAlternatives,\n    type FindGenericAlternativesOutput\n} from '@/ai/flows/find-generic-alternatives';\nimport {\n    transcribeMedicationAudio,\n    type TranscribeMedicationAudioOutput\n} from '@/ai/flows/voice-to-text';\n\n\nexport async function checkInteractions(\n  drugList: string[]\n): Promise<DetectDrugInteractionsOutput | { error: string }> {\n  if (!drugList || drugList.length < 2) {\n    return { error: 'Please provide at least two drugs to check for interactions.' };\n  }\n\n  try {\n    const result = await detectDrugInteractions({ drugList });\n    return result;\n  } catch (error) {\n    console.error('Error in detectDrugInteractions flow:', error);\n    return { error: 'Failed to check interactions due to a server error. Please try again later.' };\n  }\n}\n\nexport async function getDrugsFromPrescription(\n  photoDataUri: string\n): Promise<ParsePrescriptionOutput | { error: string }> {\n  if (!photoDataUri) {\n    return { error: 'Please provide a prescription image.' };\n  }\n\n  try {\n    const result = await parsePrescription({ photoDataUri });\n    return result;\n  } catch (error) {\n    console.error('Error in parsePrescription flow:', error);\n    return {\n      error:\n        'Failed to parse prescription due to a server error. Please try again later.',\n    };\n  }\n}\n\nexport async function askChatbot(\n  question: string,\n  drugList?: string[],\n  attachmentDataUri?: string\n): Promise<MedicationChatOutput | { error: string }> {\n  if (!question) {\n    return { error: 'Please provide a question.' };\n  }\n\n  try {\n    const result = await medicationChat({ question, drugList, attachmentDataUri });\n    return result;\n  } catch (error) {\n    console.error('Error in medicationChat flow:', error);\n    return { error: 'Failed to get a response due to a server error. Please try again later.' };\n  }\n}\n\nexport async function getRiskExplanation(\n  drugA: string,\n  drugB: string,\n  interactionDetails: string\n): Promise<ExplainInteractionRisksOutput | { error: string }> {\n  if (!drugA || !drugB || !interactionDetails) {\n    return { error: 'Please provide the necessary details for an explanation.' };\n  }\n\n  try {\n    const result = await explainInteractionRisks({ drugA, drugB, interactionDetails });\n    return result;\n  } catch (error) {\n    console.error('Error in explainInteractionRisks flow:', error);\n    return { error: 'Failed to get an explanation due to a server error. Please try again later.' };\n  }\n}\n\nexport async function getPillIdentification(\n  photoDataUri: string,\n  imprint?: string,\n  color?: string,\n  shape?: string\n): Promise<IdentifyPillOutput | { error: string }> {\n  if (!photoDataUri) {\n    return { error: 'Please provide a photo of the pill.' };\n  }\n  \n  try {\n    const result = await identifyPill({ photoDataUri, imprint, color, shape });\n    return result;\n  } catch (error) {\n    console.error('Error in identifyPill flow:', error);\n    return { error: 'Failed to identify pill due to a server error. Please try again later.' };\n  }\n}\n\nexport async function getGenericAlternatives(\n    drugName: string\n): Promise<FindGenericAlternativesOutput | { error: string }> {\n    if (!drugName) {\n        return { error: 'Please provide a drug name.' };\n    }\n\n    try {\n        const result = await findGenericAlternatives({ drugName });\n        return result;\n    } catch (error) {\n        console.error('Error in findGenericAlternatives flow:', error);\n        return { error: 'Failed to find alternatives due to a server error. Please try again later.' };\n    }\n}\n\nexport async function getTranscription(\n    audioDataUri: string\n): Promise<TranscribeMedicationAudioOutput | { error: string }> {\n    if (!audioDataUri) {\n        return { error: 'Please provide an audio file.' };\n    }\n\n    try {\n        const result = await transcribeMedicationAudio({ audioDataUri });\n        return result;\n    } catch (error) {\n        console.error('Error in transcribeMedicationAudio flow:', error);\n        return { error: 'Failed to transcribe audio due to a server error. Please try again later.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;IAwGsB,wBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        warning:\n          \"border-transparent bg-accent text-accent-foreground hover:bg-accent/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 509, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/pill-identifier/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport Image from 'next/image';\n\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Form, FormControl, FormField, FormItem, FormMessage } from '@/components/ui/form';\nimport { useToast } from '@/hooks/use-toast';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { UploadCloud, Loader2, Pill, ScanLine, Palette, CircleDot } from 'lucide-react';\nimport { getPillIdentification } from '@/app/actions';\nimport { type IdentifyPillOutput } from '@/ai/flows/identify-pill-flow';\nimport { Badge } from '@/components/ui/badge';\nimport { Skeleton } from '@/components/ui/skeleton';\n\nconst formSchema = z.object({\n  imprint: z.string().optional(),\n  color: z.string().optional(),\n  shape: z.string().optional(),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\nexport default function PillIdentifierPage() {\n  const [file, setFile] = useState<File | null>(null);\n  const [preview, setPreview] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [result, setResult] = useState<IdentifyPillOutput | null>(null);\n  const { toast } = useToast();\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      imprint: '',\n      color: '',\n      shape: '',\n    },\n  });\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = event.target.files?.[0];\n    if (selectedFile) {\n      if (selectedFile.size > 4 * 1024 * 1024) { // 4MB limit\n        toast({\n          variant: 'destructive',\n          title: 'File too large',\n          description: 'Please upload an image smaller than 4MB.',\n        });\n        return;\n      }\n      setFile(selectedFile);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result as string);\n      };\n      reader.readAsDataURL(selectedFile);\n    }\n  };\n\n  const onSubmit = async (data: FormValues) => {\n    if (!file || !preview) {\n      toast({\n        variant: 'destructive',\n        title: 'No image selected',\n        description: 'Please upload an image of the pill.',\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    setResult(null);\n\n    const response = await getPillIdentification(preview, data.imprint, data.color, data.shape);\n\n    if (response && 'error' in response) {\n      toast({\n        variant: 'destructive',\n        title: 'Error Identifying Pill',\n        description: response.error,\n      });\n    } else {\n      setResult(response);\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <main className=\"flex-1 p-4 md:p-8\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 items-start max-w-6xl mx-auto\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Pill /> Pill Identifier\n            </CardTitle>\n            <CardDescription>\n              Upload an image and provide details to identify a pill.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                <div className=\"space-y-4\">\n                  <div className=\"relative flex w-full flex-col items-center justify-center rounded-lg border-2 border-dashed border-border bg-muted/25 p-8 text-center\">\n                    <UploadCloud className=\"mb-4 h-12 w-12 text-muted-foreground\" />\n                    <h3 className=\"text-xl font-semibold\">Upload Pill Image</h3>\n                    <p className=\"text-muted-foreground\">Click to browse or drag and drop</p>\n                    <Input\n                      type=\"file\"\n                      id=\"pill-image-upload\"\n                      className=\"absolute inset-0 z-10 h-full w-full cursor-pointer opacity-0\"\n                      accept=\"image/png, image/jpeg, image/webp\"\n                      onChange={handleFileChange}\n                      disabled={isLoading}\n                    />\n                  </div>\n\n                  {preview && (\n                    <div className=\"overflow-hidden rounded-md border\">\n                      <Image\n                        src={preview}\n                        alt=\"Pill preview\"\n                        width={400}\n                        height={400}\n                        className=\"h-auto w-full object-contain\"\n                      />\n                    </div>\n                  )}\n\n                  <FormField\n                    control={form.control}\n                    name=\"imprint\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <Label htmlFor=\"imprint\" className=\"flex items-center gap-2\"><ScanLine size={16}/> Imprint (optional)</Label>\n                        <FormControl>\n                          <Input id=\"imprint\" placeholder=\"e.g., L484\" {...field} disabled={isLoading} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <FormField\n                      control={form.control}\n                      name=\"color\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <Label htmlFor=\"color\" className=\"flex items-center gap-2\"><Palette size={16}/> Color (optional)</Label>\n                          <FormControl>\n                            <Input id=\"color\" placeholder=\"e.g., White\" {...field} disabled={isLoading} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={form.control}\n                      name=\"shape\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <Label htmlFor=\"shape\" className=\"flex items-center gap-2\"><CircleDot size={16}/> Shape (optional)</Label>\n                          <FormControl>\n                            <Input id=\"shape\" placeholder=\"e.g., Round\" {...field} disabled={isLoading} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n                </div>\n\n                <Button type=\"submit\" disabled={isLoading} className=\"w-full\">\n                  {isLoading ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Identifying...\n                    </>\n                  ) : (\n                    'Identify Pill'\n                  )}\n                </Button>\n              </form>\n            </Form>\n          </CardContent>\n        </Card>\n\n        <div className=\"space-y-6\">\n          <Card className=\"h-full\">\n            <CardHeader>\n              <CardTitle>Identification Result</CardTitle>\n              <CardDescription>\n                The AI's analysis of your pill will appear here.\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {isLoading && (\n                 <div className=\"space-y-4\">\n                    <Skeleton className=\"h-8 w-3/4\" />\n                    <Skeleton className=\"h-6 w-1/2\" />\n                    <Skeleton className=\"h-4 w-full\" />\n                    <Skeleton className=\"h-4 w-full\" />\n                    <Skeleton className=\"h-4 w-3/4\" />\n                </div>\n              )}\n              {!isLoading && result && (\n                <div className=\"space-y-4\">\n                  <div>\n                    <Label>Identified Medication</Label>\n                    <h3 className=\"text-2xl font-bold\">{result.medicationName}</h3>\n                  </div>\n                  <div>\n                    <Label>Strength</Label>\n                    <p className=\"text-lg text-muted-foreground\">{result.strength}</p>\n                  </div>\n                  <div>\n                    <Label>Confidence</Label>\n                    <div>\n                        <Badge variant={\n                            result.confidence === 'High' ? 'default' :\n                            result.confidence === 'Medium' ? 'warning' : 'destructive'\n                        }>\n                            {result.confidence}\n                        </Badge>\n                    </div>\n                  </div>\n                  <Alert variant=\"destructive\">\n                    <AlertTitle>Important Disclaimer</AlertTitle>\n                    <AlertDescription>{result.disclaimer}</AlertDescription>\n                  </Alert>\n                </div>\n              )}\n              {!isLoading && !result && (\n                <div className=\"text-center py-12 text-muted-foreground\">\n                  <p>Upload an image and click \"Identify Pill\" to see the results.</p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}